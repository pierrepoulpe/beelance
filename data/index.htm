<!--   FSWebServer - Example Index Page  Copyright (c) 2015 Hristo Gochkov. All rights reserved.  This file is part of the ESP8266WebServer library for Arduino environment.   This library is free software; you can redistribute it and/or  modify it under the terms of the GNU Lesser General Public  License as published by the Free Software Foundation; either  version 2.1 of the License, or (at your option) any later version.  This library is distributed in the hope that it will be useful,  but WITHOUT ANY WARRANTY; without even the implied warranty of  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU  Lesser General Public License for more details.  You should have received a copy of the GNU Lesser General Public  License along with this library; if not, write to the Free Software  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA--><!DOCTYPE html><html><head>  <meta http-equiv="Content-type" content="text/html; charset=utf-8">  <title>ESP Monitor</title>  <script type="text/javascript" src="graphs.js"></script>  <script type="text/javascript">    var optDiff,motorTarget,motorPosition,wakeUpPeriod;    var reloadPeriod = 200;    var running = false;        function loadValues(){      if(!running) return;      var xh = new XMLHttpRequest();      xh.onreadystatechange = function(){        if (xh.readyState == 4){          if(xh.status == 200) {            var res = JSON.parse(xh.responseText);            v0 = res.v0;            analogGraph.add(v0);            motorCheckGraph.add(res.motorCheck);                        motorPosition = res.motorPosition;            document.getElementById("motorPosition").value = motorPosition;                        wakeUpPeriod = res.wakeUpPeriod;            if (document.getElementById("wakeUpPeriod") != document.activeElement) document.getElementById("wakeUpPeriod").value = wakeUpPeriod;                                    sigfoxSendEnable = res.sigfoxSendEnable;            document.getElementById("sigfoxSendEnable").checked = (sigfoxSendEnable == 1);                                    document.getElementById("debugText").value = res.debugText;            if (document.getElementById("debugText") != document.activeElement) document.getElementById("debugText").scrollTop = document.getElementById("debugText").scrollHeight;                                                  if(running) setTimeout(loadValues, reloadPeriod);          } else running = false;        }      };      xh.open("GET", "/all", true);      xh.send(null);    };        function run(){      if(!running){        //alert("go");        running = true;        loadValues();      }    }        function onBodyLoad(){      var refreshInput = document.getElementById("refresh-rate");      refreshInput.value = reloadPeriod;            refreshInput.onchange = function(e){        var value = parseInt(e.target.value);        reloadPeriod = (value > 0)?value:0;        e.target.value = reloadPeriod;      }            var sleepButton = document.getElementById("sleep-button");      sleepButton.onclick = function(e){        var xh = new XMLHttpRequest();        xh.open("GET","/sleep", true);        xh.send(null);      }      var equilibreButton = document.getElementById("equilibre-button");      equilibreButton.onclick = function(e){        var xh = new XMLHttpRequest();        xh.open("GET", "/equilibre", true);        xh.send(null);      }      var equilibreButton = document.getElementById("motorCheck-button");      equilibreButton.onclick = function(e){        var xh = new XMLHttpRequest();        xh.open("GET", "/motorCheck", true);        xh.send(null);      }            var tareButton = document.getElementById("tare-button");      tareButton.onclick = function(e){        var xh = new XMLHttpRequest();        xh.open("GET", "/tare", true);        xh.send(null);      }            var motorTargetInput = document.getElementById("motorTarget");      motorTargetInput.value = motorTarget;      motorTargetInput.onchange = function(e){        motorTarget = parseInt(e.target.value);               var xh = new XMLHttpRequest();        xh.open("GET", "/motorTarget?value=" + motorTarget, true);        xh.send(null);      }            var wakeUpPeriodInput = document.getElementById("wakeUpPeriod");      wakeUpPeriodInput.onchange = function(e){        wakeUpPeriod = parseInt(e.target.value);                var xh = new XMLHttpRequest();        xh.open("GET", "/wakeUpPeriod?value=" + wakeUpPeriod, true);        xh.send(null);              }            var sigfoxSendEnableInput = document.getElementById("sigfoxSendEnable");      sigfoxSendEnableInput.onchange = function(e){        sigfoxSendEnable = e.target.checked ? 1 : 0;                var xh = new XMLHttpRequest();        xh.open("GET", "/sigfoxSendEnable?value=" + sigfoxSendEnable, true);        xh.send(null);              }                              analogGraph = createGraph(document.getElementById("analog"), "Analog Input", 180, 100, 0, 1024, false, "cyan");      motorCheckGraph  = createGraph(document.getElementById("motorCheck"), "Endstop state", 180, 100, 0, 1, false, "cyan");            run();    }  </script></head><body id="index" style="margin:0; padding:0;" onload="onBodyLoad()">  <div id="controls" style="display: block; border: 1px solid rgb(68, 68, 68); padding: 5px; margin: 5px; width: 600px; background-color: rgb(238, 238, 238);">        <label>Period (ms):</label>    <br><input type="number" id="refresh-rate"/>    <br><input type="button" id="sleep-button" value="Deep sleep"/>    <br><input type="button" id="equilibre-button" value="Recherche equilibre"/>        <br><input type="button" id="motorCheck-button" value="Recherche contrÃ´le moteur"/>        <br><input type="button" id="tare-button" value="Tare"/>      </div>    <div id="controls" style="display: block; border: 1px solid rgb(68, 68, 68); padding: 5px; margin: 5px; width: 600px; background-color: rgb(238, 238, 238);">    <table>    <tr><td><label>wakeUpPeriod (min):</label></td><td><input type="number" id="wakeUpPeriod"/></td></tr>    <tr><td><label>enableSigfox:</label></td><td><input type="checkbox" id="sigfoxSendEnable"/></td></tr>    <tr><td><label>motorTarget:</label></td><td><input type="number" id="motorTarget"/></td></tr>    <tr><td><label>motorPosition:</label></td><td><input type="number" id="motorPosition"/></td></tr>    <tr><td><label>debug:</label></td><td><textarea rows="10" cols="50" id="debugText"></textarea></td></tr>        </table>  </div>      <div id="analog"></div>  <div id="motorCheck"></div>  </body></html>